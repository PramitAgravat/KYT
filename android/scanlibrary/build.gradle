import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    //buildToolsVersion "23.0.3"

/*
    task ndkBuild(type: Exec, description: 'run ndk-build') {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            workingDir 'src/main/jni'
            commandLine 'ndk-build.cmd', '-j', Runtime.runtime.availableProcessors()

        } else {
            workingDir 'src/main/jni'
            commandLine "$ndkDir/ndk-build", '-j', Runtime.runtime.availableProcessors()
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(ndkBuild)
    }*/

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        ndk
                {
                    moduleName "Scanner"
                }
    }
    sourceSets.main
            {
                jni.srcDirs = []
                jniLibs.srcDir 'src/main/libs'
            }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libScanner.so'
        pickFirst 'lib/arm64-v8a/libScanner.so'
        pickFirst 'lib/x86/libScanner.so'
        pickFirst 'lib/x86_64/libScanner.so'

        pickFirst 'lib/armeabi-v7a/libopencv_java3.so'
        pickFirst 'lib/arm64-v8a/libopencv_java3.so'
        pickFirst 'lib/x86/libopencv_java3.so'
        pickFirst 'lib/x86_64/libopencv_java3.so'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

}

android {
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
    defaultConfig {
        ndk {
            abiFilters 'armeabi-v7a'
        }
    }
}
